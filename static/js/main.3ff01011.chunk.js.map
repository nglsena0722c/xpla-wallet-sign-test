{"version":3,"sources":["App.js","ConnectModal/style.js","ConnectModal/index.js","index.js"],"names":["App","status","wallets","connect","disconnect","availableConnections","useWallet","connectedWallet","useConnectedWallet","signresult","setSignResult","useState","signError","setsignError","signverifyResult","setSignVerifyResult","useEffect","signature","result","signresultpubkey","public_key","SimplePublicKey","key","signbytes","Uint8Array","Object","values","checkAddress","xplaAddress","address","verifyBytes","Buffer","from","_jsx","className","children","WalletStatus","WALLET_CONNECTED","_jsxs","_Fragment","type","onClick","async","WALLET_NOT_CONNECTED","selected","selectConnection","filter","connection","ConnectType","READONLY","identifier","length","signBytes","error","UserDenied","Error","message","String","style","marginTop","modalStyle","connections","Promise","resolve","_document$querySelect","_document$querySelect2","styleContainer","document","createElement","modalContainer","element","_ref","onComplete","container","setAttribute","dim","appendChild","content","title","textContent","list","item","button","addEventListener","icon","iconImg","name","description","arrow","createElementNS","path","createModalElement","_styleContainer$paren","_modalContainer$paren","parentElement","removeChild","body","overflow","querySelector","root","createRoot","getElementById","getChainOptions","then","chainOptions","render","WalletProvider"],"mappings":"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","file":"static/js/main.3ff01011.chunk.js","sourcesContent":["import {\n    useConnectedWallet,\n    UserDenied,\n    useWallet,\n    WalletStatus,\n    verifyBytes,\n    ConnectType\n} from \"@xpla/wallet-provider\";\nimport React, { useState, useEffect } from \"react\";\nimport { SimplePublicKey } from \"@xpla/xpla.js\";\nimport { selectConnection } from './ConnectModal';\n\nexport default function App() {\n    const {\n        status,\n        wallets,\n        connect,\n        disconnect,\n        availableConnections\n    } = useWallet();\n\n    const connectedWallet = useConnectedWallet();\n\n\n    const [signresult, setSignResult] = useState(null);\n    const [signError, setsignError] = useState(null);\n    const [signverifyResult, setSignVerifyResult] = useState(\"not verified\");\n\n    const handleSignbytes = async () => {\n        const signMessages = `test`;\n\n        try {\n            const result = await connectedWallet.signBytes(Buffer.from(signMessages));\n            setSignResult(result);\n        } catch (error) {\n            if (error instanceof UserDenied) {\n                setsignError(\"User Denied\");\n            } else {\n                setsignError(\"Unknown Error: \" + error instanceof Error ? error.message : String(error));\n            }\n        }\n    };\n\n    const clickConnectWallet =async () => {\n        if (status === WalletStatus.WALLET_NOT_CONNECTED) {\n          // console.log('ConnectWallet.availableConnections: ', status, availableConnections);\n          const selected = await selectConnection(availableConnections.filter((connection) => connection.type !== ConnectType.READONLY ));\n          if (!selected) {\n            return;\n          }\n    \n          const type = selected[0];\n          const identifier = selected[1];\n          connect(type, identifier);\n        } \n      }\n    \n\n    useEffect(() => {\n        const signMessages = `test`;\n\n        if (!signresult || !wallets) {\n            setSignVerifyResult(\"not verified\")\n            return;\n        }\n\n        const signature = signresult.result.signature;\n        const signresultpubkey = signresult.result.public_key;\n        const public_key = new SimplePublicKey(signresultpubkey.key);\n        const signbytes = {\n            signature: new Uint8Array(Object.values(signature)),\n            public_key\n        };\n\n        const checkAddress = (wallets[0].xplaAddress === public_key.address());\n        setSignVerifyResult((verifyBytes(Buffer.from(signMessages), signbytes) && (checkAddress === true)) ? \"verified\" : \"wrong signbytes\")\n    }, [signresult, setSignVerifyResult, wallets]);\n\n    return <div className=\"example-container\">\n        {status !== WalletStatus.WALLET_CONNECTED ? (\n            <>\n                <button\n                    className=\"button-css width-full\"\n                    type=\"button\"\n                    onClick={clickConnectWallet}\n                >\n                    Connect Wallet\n                </button>\n                <p className=\"warning\">If there is no change even after clicking the button, please press the refresh button in the bottom right corner of the screen.</p>\n            </>\n        ) : (\n            <>\n                <div className=\"info-container\">\n                    <div className=\"info-title\">Connected Address</div>\n                    <div className=\"info-content\">\n                        {wallets.length === 0 ? \"Loading...\" : wallets[0].xplaAddress}\n                    </div>\n                </div>\n                <div className=\"bottom-button-container\">\n                    <button className=\"button-css\" type=\"button\" onClick={handleSignbytes}>\n                        Signbytes\n                    </button>\n                    <button className=\"button-css\" type=\"button\" onClick={disconnect}>\n                        Disconnect\n                    </button>\n                </div>\n\n                {signresult && (\n                    <div style={{ marginTop: 20 }}>\n                        <div className=\"info-title\">Signature Verify</div>\n                        <div className=\"info-content\">\n                            <span>\n                                {signverifyResult}\n                            </span>\n                        </div>\n                    </div>\n                )}\n                {signError && (\n                    <div style={{ marginTop: 20 }}>\n                        <div className=\"info-title\">Tx Error</div>\n                        <div className=\"info-content\">\n                            <span>\n                                {signError}\n                            </span>\n                        </div>\n                    </div>\n                )}\n            </>\n        )}\n    </div>\n}","// language=css\r\nexport const modalStyle = `\r\n@keyframes wallet-select-modal--dim-enter {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  \r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n@keyframes wallet-select-modal--content-enter {\r\n  0% {\r\n    opacity: 0;\r\n    transform: scale(0.4);\r\n  }\r\n  \r\n  100% {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n}\r\n.wallet-select-modal {\r\n  position: fixed;\r\n  z-index: 100000;\r\n  \r\n  color: #212121;\r\n  \r\n  left: 0;\r\n  top: 0;\r\n  bottom : 0;\r\n  width: 100vw;\r\n  \r\n  font-family: sans-serif;\r\n  \r\n  display: grid;\r\n  place-content: center;\r\n}\r\n.wallet-select-modal > .wallet-select-modal--dim {\r\n  position: fixed;\r\n  z-index: -1;\r\n  \r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  \r\n  animation: wallet-select-modal--dim-enter 0.2s ease-in-out;\r\n}\r\n.wallet-select-modal > .wallet-select-modal--content {\r\n  box-sizing: border-box;\r\n  \r\n  border-radius: 8px;\r\n  \r\n  background-color: #ffffff;\r\n  box-shadow: 0 4px 18px 3px rgba(0, 0, 0, 0.43);\r\n  \r\n  animation: wallet-select-modal--content-enter 0.2s ease-in-out;\r\n  \r\n  width: 100vw;\r\n  max-width: 480px;\r\n  padding: 40px;\r\n}\r\n.wallet-select-modal > .wallet-select-modal--content h1 {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  \r\n  margin: 0 0 32px 0;\r\n  \r\n  text-align: center;\r\n}\r\n.wallet-select-modal > .wallet-select-modal--content ul {\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n  \r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.wallet-select-modal > .wallet-select-modal--content ul li {\r\n  border-top: 1px solid #cfd8ea;\r\n}\r\n.wallet-select-modal > .wallet-select-modal--content ul li:last-child {\r\n  border-bottom: 1px solid #cfd8ea;\r\n}\r\n.wallet-select-modal > .wallet-select-modal--content ul button {\r\n  width: 100%;\r\n  height: 66px;\r\n  \r\n  border: none;\r\n  background-color: transparent;\r\n  outline: none;\r\n  cursor: pointer;\r\n  \r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n}\r\n.wallet-select-modal > .wallet-select-modal--content ul button:hover {\r\n  background-color: hsl(220, 39%, 86%, 0.25);\r\n}\r\n.wallet-select-modal > .wallet-select-modal--content ul button .wallet-select-modal--icon {\r\n  display: inline-grid;\r\n  width: 50px;\r\n  height: 50px;\r\n  \r\n  place-content: center;\r\n}\r\n.wallet-select-modal > .wallet-select-modal--content ul button .wallet-select-modal--icon img {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n.wallet-select-modal > .wallet-select-modal--content ul button .wallet-select-modal--description {\r\n  flex: 1;\r\n  text-align: left;\r\n  \r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  color: #212121;\r\n}\r\n.wallet-select-modal > .wallet-select-modal--content ul button svg {\r\n  width: 18px;\r\n  height: 18px;\r\n  \r\n  fill: #cfd8ea;\r\n}\r\n.wallet-select-modal > .wallet-select-modal--content ul button:hover svg {\r\n  fill: #2043b5;\r\n}\r\n@media (max-width: 450px) {\r\n  .wallet-select-modal {\r\n    place-content: flex-end;\r\n  }\r\n  \r\n  .wallet-select-modal > .wallet-select-modal--content {\r\n    border-bottom-left-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n  }\r\n}\r\n`;","// https://github.com/xpladev/wallet-provider/blob/main/packages/src/%40xpla/wallet-controller/modules/connect-modal/index.ts \r\nimport { modalStyle } from './style';\r\n\r\nexport function selectConnection(\r\n  connections,\r\n){\r\n  return new Promise((resolve) => {\r\n    const styleContainer = document.createElement('style');\r\n    const modalContainer = document.createElement('div');\r\n\r\n    function onComplete(connection) {\r\n      resolve(connection ? [connection.type, connection.identifier] : null);\r\n      styleContainer.parentElement?.removeChild(styleContainer);\r\n      modalContainer.parentElement?.removeChild(modalContainer);\r\n      document.body.style.overflow = \"unset\"; // 스크롤 방지 해제\r\n    }\r\n\r\n    const element = createModalElement({\r\n      connections,\r\n      onComplete,\r\n    });\r\n\r\n    styleContainer.textContent = modalStyle;\r\n    modalContainer.appendChild(element);\r\n\r\n    document.querySelector('head')?.appendChild(styleContainer);\r\n    document.querySelector('body')?.appendChild(modalContainer);\r\n    document.body.style.overflow = \"hidden\"; // 메뉴 누르면 스크롤 방지\r\n  });\r\n}\r\n\r\nfunction createModalElement({\r\n  connections,\r\n  onComplete,\r\n}) {\r\n  // ---------------------------------------------\r\n  // container\r\n  // ---------------------------------------------\r\n  const container = document.createElement('div');\r\n  container.setAttribute('class', 'wallet-select-modal');\r\n\r\n  // ---------------------------------------------\r\n  // container > div.wallet-select-modal--dim\r\n  // ---------------------------------------------\r\n  const dim = document.createElement('div');\r\n  dim.setAttribute('class', 'wallet-select-modal--dim');\r\n\r\n  container.appendChild(dim);\r\n\r\n  // ---------------------------------------------\r\n  // content > div.wallet-select-modal--content\r\n  // ---------------------------------------------\r\n  const content = document.createElement('section');\r\n  content.setAttribute('class', 'wallet-select-modal--content');\r\n\r\n  container.appendChild(content);\r\n\r\n  // h1\r\n  const title = document.createElement('h1');\r\n  title.textContent = 'Select a Wallet';\r\n  content.appendChild(title);\r\n\r\n  // ul\r\n  const list = document.createElement('ul');\r\n  content.appendChild(list);\r\n\r\n  for (const connection of connections) {\r\n    const item = document.createElement('li');\r\n\r\n    const button = document.createElement('button');\r\n    button.addEventListener('click', () => onComplete(connection));\r\n\r\n    item.appendChild(button);\r\n\r\n    const icon = document.createElement('span');\r\n    icon.setAttribute('class', 'wallet-select-modal--icon');\r\n\r\n    button.appendChild(icon);\r\n\r\n    const iconImg = document.createElement('img');\r\n    iconImg.setAttribute('src', connection.icon);\r\n    iconImg.setAttribute(\r\n      'alt',\r\n      `${connection.name} [${connection.identifier}]`,\r\n    );\r\n\r\n    icon.appendChild(iconImg);\r\n\r\n    const description = document.createElement('span');\r\n    description.setAttribute('class', 'wallet-select-modal--description');\r\n    description.textContent = connection.name;\r\n\r\n    button.appendChild(description);\r\n\r\n    const arrow = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n    arrow.setAttribute('viewBox', '0 0 24 24');\r\n\r\n    button.appendChild(arrow);\r\n\r\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    path.setAttribute('d', 'M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z');\r\n\r\n    arrow.appendChild(path);\r\n\r\n    list.appendChild(item);\r\n  }\r\n\r\n  // events\r\n  dim.addEventListener('click', () => onComplete(null));\r\n\r\n  return container;\r\n}","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./index.css\";\nimport {\n    getChainOptions,\n    WalletProvider,\n} from \"@xpla/wallet-provider\";\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById('root'));\ngetChainOptions().then((chainOptions) => {\n    root.render(\n        <WalletProvider {...chainOptions}>\n            <App />\n        </WalletProvider>\n    );\n});"],"sourceRoot":""}